environments:
  - name: pims-dev
    cluster:
      instanceType: t2.medium
      desiredCapacity: 1
      maxSize: 2
  - name: pims-prod
    cluster:
      instanceType: t2.medium
      desiredCapacity: 1
      maxSize: 2
service:
  name: muexample
  healthEndpoint: /
  port: 80
  pathPatterns:
    - /*
  pipeline:
    source:
      provider: GitHub
      repo: tmcelhattan/muexample
    build:
      image: aws/codebuild/eb-ruby-2.3-amazonlinux-64:2.1.6
    acceptance:
      image: aws/codebuild/eb-ruby-2.3-amazonlinux-64:2.1.6
      environment: pims-dev
    production:
      environment: pims-prod
templates:
  mu-pipeline-muexample:
    Resources:
      CodeBuildRole:
        Type: AWS::IAM::Role
        Properties:
          AssumeRolePolicyDocument:
            Statement:
            - Effect: Allow
              Principal:
                Service:
                - codebuild.amazonaws.com
              Action:
              - sts:AssumeRole
          Path: "/"
          Policies:
          - PolicyName: codebuild-service
            PolicyDocument:
              Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"
              Version: '2012-10-17'
      CodePipelineRole:
        Type: AWS::IAM::Role
        Properties:
          AssumeRolePolicyDocument:
            Statement:
            - Effect: Allow
              Principal:
                Service:
                - codepipeline.amazonaws.com
              Action:
              - sts:AssumeRole
          Path: "/"
          Policies:
          - PolicyName: codepipeline-service
            PolicyDocument:
              Statement:
              - Action:
                - codebuild:*
                Resource: "*"
                Effect: Allow
              - Action:
                - codecommit:GetBranch
                - codecommit:GetCommit
                - codecommit:UploadArchive
                - codecommit:GetUploadArchiveStatus
                - codecommit:CancelUploadArchive
                Resource: "*"
                Effect: Allow
              - Action:
                - s3:GetObject
                - s3:GetObjectVersion
                - s3:GetBucketVersioning
                Resource: "*"
                Effect: Allow
              - Action:
                - s3:PutObject
                Resource:
                - arn:aws:s3:::codepipeline*
                Effect: Allow
              - Action:
                - s3:*
                - cloudformation:*
                - ecs:*
                - iam:PassRole
                Resource: "*"
                Effect: Allow
              Version: '2012-10-17'
      CodeBuildArtifact:
        Type: AWS::CodeBuild::Project
        Condition: IsBuildEnabled
        DependsOn: CodeBuildRole
        Properties:
          Name: !Sub ${AWS::StackName}-artifact
          Description: Build artifact from source
          ServiceRole: !GetAtt CodeBuildRole.Arn
          Artifacts:
            Type: CODEPIPELINE
          Environment:
            Type: !Ref BuildType
            ComputeType: !Ref BuildComputeType
            Image: !Sub ${BuildImage}
          Source:
            Type: CODEPIPELINE
          TimeoutInMinutes: 30
      CodeBuildImage:
        Type: AWS::CodeBuild::Project
        Condition: IsBuildEnabled
        DependsOn: CodeBuildRole
        Properties:
          Name: !Sub ${AWS::StackName}-image
          Description: Build image from artifact
          ServiceRole: !GetAtt CodeBuildRole.Arn
          Artifacts:
            Type: CODEPIPELINE
          Environment:
            Type: !Ref MuType
            ComputeType: !Ref MuComputeType
            Image: !Sub ${MuImage}
            EnvironmentVariables:
             - Name: DOCKER_API_VERSION
               Value: 1.24
          Source:
            Type: CODEPIPELINE
            BuildSpec: !Sub |
              version: 0.2
              phases:
                build:
                  commands:
                    - curl -sL ${MuDownloadBaseurl}/v${MuDownloadVersion}/${MuDownloadFile} -o /usr/bin/mu
                    - chmod +rx /usr/bin/mu
                    - mu -c ${MuFile} svc push
              artifacts:
                files:
                  - ${MuFile}
          TimeoutInMinutes: 30
      DeployAcceptance:
        Type: AWS::CodeBuild::Project
        Condition: IsAcptEnabled
        DependsOn: CodeBuildRole
        Properties:
          Name: !Sub ${AWS::StackName}-deploy-acceptance
          Description: Deploy image to test environment
          ServiceRole: !GetAtt CodeBuildRole.Arn
          Artifacts:
            Type: CODEPIPELINE
          Environment:
            Type: !Ref MuType
            ComputeType: !Ref MuComputeType
            Image: !Sub ${MuImage}
          Source:
            Type: CODEPIPELINE
            BuildSpec: !Sub |
              version: 0.2
              env:
                variables:
                  DEFAULT_BUILDSPEC: "${DefaultBuildspec}"
              phases:
                build:
                  commands:
                    - curl -sL ${MuDownloadBaseurl}/v${MuDownloadVersion}/${MuDownloadFile} -o /usr/bin/mu
                    - chmod +rx /usr/bin/mu
                    - mu -c ${MuFile} env up ${AcptEnv} || echo "Skipping update of environment"
                    - mu -c ${MuFile} db up ${AcptEnv} || echo "Skipping update of database"
                    - mu -c ${MuFile} svc deploy ${AcptEnv}
                    - mu env show ${AcptEnv} -f json > env.json
                    - mv buildspec-test.yml buildspec.yml || echo "$DEFAULT_BUILDSPEC" > buildspec.yml
              artifacts:
                files:
                  - '**/*'
          TimeoutInMinutes: 30
      TestAcceptance:
        Type: AWS::CodeBuild::Project
        Condition: IsAcptEnabled
        DependsOn: CodeBuildRole
        Properties:
          Name: !Sub ${AWS::StackName}-test-acceptance
          Description: Test in the acceptance environment
          ServiceRole: !GetAtt CodeBuildRole.Arn
          Artifacts:
            Type: CODEPIPELINE
          Environment:
            Type: !Ref TestType
            ComputeType: !Ref TestComputeType
            Image: !Sub ${TestImage}
          Source:
            Type: CODEPIPELINE
          TimeoutInMinutes: 30
      DeployProduction:
        Type: AWS::CodeBuild::Project
        Condition: IsProdEnabled
        DependsOn: CodeBuildRole
        Properties:
          Name: !Sub ${AWS::StackName}-deploy-production
          Description: Deploy image to prod environment
          ServiceRole: !GetAtt CodeBuildRole.Arn
          Artifacts:
            Type: CODEPIPELINE
          Environment:
            Type: !Ref MuType
            ComputeType: !Ref MuComputeType
            Image: !Sub ${MuImage}
          Source:
            Type: CODEPIPELINE
            BuildSpec: !Sub |
              version: 0.2
              env:
                variables:
                  DEFAULT_BUILDSPEC: "${DefaultBuildspec}"
              phases:
                build:
                  commands:
                    - curl -sL ${MuDownloadBaseurl}/v${MuDownloadVersion}/${MuDownloadFile} -o /usr/bin/mu
                    - chmod +rx /usr/bin/mu
                    - mu -c ${MuFile} env up ${ProdEnv} || echo "Skipping update of environment"
                    - mu -c ${MuFile} db up ${ProdEnv} || echo "Skipping update of database"
                    - mu -c ${MuFile} svc deploy ${ProdEnv}
                    - mu env show ${ProdEnv} -f json > env.json
                    - mv buildspec-prod.yml buildspec.yml || echo "$DEFAULT_BUILDSPEC" > buildspec.yml
              artifacts:
                files:
                  - '**/*'
          TimeoutInMinutes: 30
      TestProduction:
        Type: AWS::CodeBuild::Project
        Condition: IsProdEnabled
        DependsOn: CodeBuildRole
        Properties:
          Name: !Sub ${AWS::StackName}-test-production
          Description: Test in the production environment
          ServiceRole: !GetAtt CodeBuildRole.Arn
          Artifacts:
            Type: CODEPIPELINE
          Environment:
            Type: !Ref TestType
            ComputeType: !Ref TestComputeType
            Image: !Sub ${TestImage}
          Source:
            Type: CODEPIPELINE
          TimeoutInMinutes: 30
      Pipeline:
        Type: AWS::CodePipeline::Pipeline
        Properties:
          RoleArn: !GetAtt CodePipelineRole.Arn
          Stages:
          - Name: Source
            Actions:
            - Name: Source
              InputArtifacts: []
              OutputArtifacts:
              - Name: SourceOutput
              ActionTypeId:
                Fn::If:
                - IsGitHub
                - Category: Source
                  Owner: ThirdParty
                  Version: '1'
                  Provider: GitHub
                - Category: Source
                  Owner: AWS
                  Version: '1'
                  Provider: CodeCommit
              Configuration:
                Fn::If:
                - IsGitHub
                - Owner: {"Fn::Select": ["0", {"Fn::Split":["/", {"Ref": "SourceRepo"}]}]}
                  Repo: {"Fn::Select": ["1", {"Fn::Split":["/", {"Ref": "SourceRepo"}]}]}
                  Branch: !Ref SourceBranch
                  OAuthToken: !Ref GitHubToken
                - RepositoryName: !Ref SourceRepo
                  BranchName: !Ref SourceBranch
              RunOrder: 1
          - !If
            - IsBuildEnabled
            - Name: Build
              Actions:
              - Name: Artifact
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: '1'
                  Provider: CodeBuild
                InputArtifacts:
                - Name: SourceOutput
                OutputArtifacts:
                - Name: ArtifactOutput
                Configuration:
                  ProjectName: !Ref CodeBuildArtifact
                RunOrder: 1
              - Name: Image
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: '1'
                  Provider: CodeBuild
                InputArtifacts:
                - Name: ArtifactOutput
                OutputArtifacts:
                - Name: ImageOutput
                Configuration:
                  ProjectName: !Ref CodeBuildImage
                RunOrder: 2
            - !Ref AWS::NoValue
          - !If
            - IsAcptEnabled
            - Name: Acceptance
              Actions:
              - Name: Approve
                ActionTypeId:
                  Category: Approval
                  Owner: AWS
                  Version: '1'
                  Provider: Manual
                Configuration:
                  CustomData: Approve deployment to production
                RunOrder: 1
              - Name: Deploy
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: '1'
                  Provider: CodeBuild
                InputArtifacts:
                - Name: SourceOutput
                OutputArtifacts:
                - Name: DeployAcceptanceOutput
                Configuration:
                  ProjectName: !Ref DeployAcceptance
                RunOrder: 1
              - Name: Test
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: '1'
                  Provider: CodeBuild
                InputArtifacts:
                - Name: DeployAcceptanceOutput
                OutputArtifacts:
                - Name: TestAcceptanceOutput
                Configuration:
                  ProjectName: !Ref TestAcceptance
                RunOrder: 2
            - !Ref AWS::NoValue
          - !If
            - IsProdEnabled
            - Name: Production
              Actions:
              - Name: Approve
                ActionTypeId:
                  Category: Approval
                  Owner: AWS
                  Version: '1'
                  Provider: Manual
                Configuration:
                  CustomData: Approve deployment to production
                RunOrder: 1
              - Name: Deploy
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: '1'
                  Provider: CodeBuild
                InputArtifacts:
                - Name: SourceOutput
                OutputArtifacts:
                - Name: DeployProductionOutput
                Configuration:
                  ProjectName: !Ref DeployProduction
                RunOrder: 2
              - Name: Test
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: '1'
                  Provider: CodeBuild
                InputArtifacts:
                - Name: DeployProductionOutput
                OutputArtifacts:
                - Name: TestProductionOutput
                Configuration:
                  ProjectName: !Ref TestProduction
                RunOrder: 3
            - !Ref AWS::NoValue
          ArtifactStore:
            Type: S3
            Location: !ImportValue mu-bucket-codepipeline
    Outputs:
      CodePipelineUrl:
        Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
        Description: CodePipeline URL
      PipelineName:
        Value: !Sub ${Pipeline}
        Description: Pipeline Name